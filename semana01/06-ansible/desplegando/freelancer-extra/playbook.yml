---
- name: Despliegue Fullstack Freelancer
  hosts: localhost
  become: yes
  vars_files:
    - vars.yml

  tasks:

    - name: Mostrar valor de env
      debug:
        msg: "Entorno actual: {{ env }}"


    - name: Instalar dependencias
      apt:
        name: ["nginx", "unzip", "wget","openssl"]
        state: present
        update_cache: yes

    - name: Crear directorio web
      file:
        path: "{{ web_root }}"
        state: directory
        mode: '0755'
      when: env=='dev'

    - name: Descargar template
      get_url:
        url: "{{ repo_url }}"
        dest: "/tmp/freelancer.zip"
        mode: '0644'
      when: env=='dev'

    - name: Descomprimir template
      unarchive:
        src: "/tmp/freelancer.zip"
        dest: "/tmp/"
        remote_src: yes
      when: env=='dev'

    - name: Mover contenido del subdirectorio
      shell: |
        cd /tmp/startbootstrap-freelancer-gh-pages
        cp -r * {{ web_root }}/
        chown -R www-data:www-data {{ web_root }}
      when: env=='dev'

    # - name: Renderizar HTML desde plantilla Jinja2
    #   template:
    #     src: templates/index.html.j2
    #     dest: "{{ web_root }}/index.html"
    #     owner: www-data
    #     group: www-data
    #     mode: '0644'
    #   when: env=='dev'

    - name: Limpiar archivos temporales
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/freelancer.zip"
        - "/tmp/startbootstrap-freelancer-gh-pages"
      when: env=='dev'

    - name: Configurar Nginx
      template:
        src: files/nginx.conf
        dest: /etc/nginx/sites-available/freelancer
      notify: Restart Nginx
      when: env=='dev'
    
   
    - name: Habilitar sitio
      file:
        src: /etc/nginx/sites-available/freelancer
        dest: /etc/nginx/sites-enabled/freelancer
        state: link
      when: env=='dev'

    - name: Eliminar default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      when: env=='dev'
    
    - name: Configurar Nginx
      template:
        src: files/loadbalancer.conf
        dest: /etc/nginx/sites-available/default
      notify: Restart Nginx
      when: env=='prod'

    
    - name: Generar clave privada
      community.crypto.openssl_privatekey:
        path: /etc/ssl/private/freelancer.key
        size: 2048
        state: present
      when: env=='prod'

    - name: Generar certificado SSL autofirmado
      community.crypto.x509_certificate:
        path: /etc/ssl/certs/freelancer.crt
        privatekey_path: /etc/ssl/private/freelancer.key
        provider: selfsigned
        selfsigned_not_before: "+0s"
        selfsigned_not_after: "+365d"
        state: present
      when: env=='prod'


    - name: Configurar Nginx
      template:
        src: files/loadbalancer.conf
        dest: /etc/nginx/sites-available/default
      notify: Restart Nginx
      when: env=='prod'

    - name: Configurar firewall
      ufw:
        rule: allow
        port: "22,80,443"
        proto: tcp

  handlers:
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted